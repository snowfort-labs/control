name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run linter
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Get version
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        else
          echo "version=dev-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        fi
    
    - name: Build binary
      run: |
        mkdir -p build
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
          -ldflags "-X main.version=${{ steps.version.outputs.version }} -s -w" \
          -o build/control-${{ matrix.goos }}-${{ matrix.goarch }} \
          ./cmd/control
    
    - name: Create archive
      run: |
        cd build
        tar -czf control-${{ steps.version.outputs.version }}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz \
          control-${{ matrix.goos }}-${{ matrix.goarch }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: build/*.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: binaries
        path: build/
    
    - name: Generate checksums
      run: |
        cd build
        shasum -a 256 *.tar.gz > checksums.txt
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/*.tar.gz
          build/checksums.txt
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  homebrew:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Update Homebrew formula
      uses: mislav/bump-homebrew-formula-action@v3
      with:
        formula-name: control
        formula-path: Formula/control.rb
        homebrew-tap: snowfort/homebrew-tap
        download-url: https://github.com/snowfort/control/releases/download/{{ version }}/control-{{ version }}-darwin-amd64.tar.gz
        commit-message: |
          {{formulaName}} {{version}}
          
          Created by https://github.com/mislav/bump-homebrew-formula-action
      env:
        COMMITTER_TOKEN: ${{ secrets.HOMEBREW_TOKEN }}